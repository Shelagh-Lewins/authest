{"version":3,"sources":["reducers/errorReducer.js","is-empty.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","setAuthToken.js","actions/authentication.js","components/Navbar.js","components/Register.js","components/Login.js","components/Home.js","components/ForgotPassword.js","components/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","updeep","require","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","user","combineReducers","errors","state","arguments","action","type","payload","auth","token","constant","username","email","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","setCurrentUser","logoutUser","history","dispatch","fetch","method","then","res","ok","json","localStorage","removeItem","push","logout user","getUserInfo","_ref","getState","headers","Authorization","concat","Accept","Content-Type","get user info","setUserInfo","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","href","onClick","onLogout","bind","guestLinks","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","connect","withRouter","Register","password","password_confirm","handleInputChange","assertThisInitialized","handleSubmit","defineProperty","target","name","registerUser","nextProps","style","marginTop","width","marginBottom","onSubmit","classnames","is-invalid","onChange","formData","FormData","append","body","catch","err","response","data","Login","loginUser","authentication","display","setItem","key","Home","ForgotPassword","forgotPasswordEmailNotSent","forgotPassword","console","log","message","ResetPassword","match","params","uid","csrfmiddlewaretoken","resetPassword","cookieValue","document","cookie","cookies","split","i","$","substring","decodeURIComponent","csrftoken","getCookie","credentials","mode","X-CSRFToken","jwtToken","currentTime","Date","now","exp","location","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3a2611e.chunk.js","sourcesContent":["// errorReducer.js\n\nimport { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","// is-empty.js\n\nconst isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","// authReducer.js\n\nimport {\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from '../actions/types';\nimport isEmpty from '../is-empty';\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'user': {}\n};\n\n// TODO use updeep\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user profile\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user profile\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer\n});","// types.js\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\n\n\n// Forgot password\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst inititalState = {};\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk), \n                window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","export var authToken;\n\nconst setAuthToken = token => {\n\tif(token) {\n\t\tauthToken = token;\n\t} else {\n\t\tauthToken = 'undefined';\n\t}\n\n\treturn authToken;\n}\n\nexport default setAuthToken;\n","// authentication.js\nimport setAuthToken from '../setAuthToken';\n// import jwt_decode from 'jwt-decode';\nimport {\n\tGET_ERRORS,\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from './types';\nimport $ from 'jquery';\n\nexport const registerUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\tfetch('/api/v1/rest-auth/registration/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => history.push('/registration'))\n\t\t.catch(err => {\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n\nexport const loginUser = (user) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/login/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'authentication': 'Unable to log in with the provided credentials, please try again.' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(data => {\n\t\t\tif(!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// token is an object { key: value }\n\t\t\t// localStorage can only store a string\n\t\t\tlocalStorage.setItem('jwtToken', data.key);\n\t\t\tsetAuthToken(data.key);\n\t\t\tdispatch(getUserInfo({ 'token': data.key })); // get the user profile\n\t\t\treturn dispatch(setCurrentUser({\n\t\t\t\t'token': data.key, // just set the token\n\t\t\t}));\n\t\t});\n};\n\nexport const setCurrentUser = token => {\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': token,\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\treturn fetch('/api/v1/rest-auth/logout/', {\n\t\t'method': 'POST',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem('jwtToken');\n\t\t\t\tsetAuthToken(false);\n\t\t\t\thistory.push('/logout');\n\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'logout user': 'Unable to logout' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(logoutUserComplete());\n\t\t});\n};\n// TODO parameterise api path\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = ({ token }) => (dispatch, getState) => {\n\tconst headers = {\n\t\t'Authorization': `Token ${token}`,\n\t\t'Accept': 'application/json',\n\t\t'Content-Type': 'application/json',\n\t};\n\n\treturn fetch('/api/v1/rest-auth/user/', {\n\t\theaders,\n\t\t'method': 'GET',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'get user info': 'Unable to get user info' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(user => {\n\t\t\tif(!user) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn dispatch(setUserInfo({\n\t\t\t\t'username': user.username,\n\t\t\t\t'email': user.email,\n\t\t\t}));\n\t\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/password/reset/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(forgotPasswordEmailSent());\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n// This function does not yet work. There is something wrong with the fetch request, perhaps the csrf tokens which I don't know how to generate correctly. The code here and in the ResetPassword component should be fixed or removed at some point.\n// For now, a Django template is used for entering the new password at http://localhost:8000/api/v1/reset/Mw/52l-11fe5a58b91d894386e8/\n\n// https://www.techiediaries.com/django-react-forms-csrf-axios/\nfunction getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = $.trim(cookies[i]);\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}\n\nexport const resetPassword = (data) => dispatch => {\n\tconsole.log('resetPassword action creator. data ', data);\n\n\tvar body = '';\n\tvar csrftoken = getCookie('csrftoken');\n\n\tbody += `csrfmiddlewaretoken=${csrftoken}&`;\n\tbody += `new_password1=${data.password}&`;\n\tbody += `new_password2=${data.password_confirm}`;\n\n\tconsole.log('token ', data.csrfmiddlewaretoken);\n\tconsole.log('body ', body);\n\tconsole.log('data.uid ', data.uid);\n\n\treturn fetch(`/api/v1/reset1/${data.uid}/set-password/`,\n\t\t{ 'credentials': 'include', 'method': 'POST', 'mode': 'same-origin',\n\t\t\t'headers': {\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t'X-CSRFToken': csrftoken\n\t\t\t}, 'body': body })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(token => {\n\t\t\treturn dispatch(resetPasswordComplete(token));\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n      'showDropdown': false,\n    };\n  }\n  showDropdown(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      'showDropdown': !prevState.showDropdown,\n    }));\n  }\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst {isAuthenticated, user} = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<a href=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\n\t\t\t\t\t{/*<img src={user.avatar} alt={user.name} title={user.name}\n\t\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t\t\tstyle={{ width: '25px', marginRight: '5px'}} /> */}\n\t\t\t\t\t\t\tLogout\n\t\t\t\t</a>\n\t\t\t</ul>\n\t\t)\n\t  const guestLinks = (\n\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Sign In</Link>\n\t\t\t</li>\n\t\t</ul>\n\t  )\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">Redux Node Auth</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t  \t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated && <span>{user.username}</span>}\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t  </form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t\t'password_confirm': this.state.password_confirm\n\t\t};\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn(\n\t\t\t<div className=\"container\" style={{ 'marginTop': '50px', 'width': '700px' }}>\n\t\t\t\t<h2 style={{ 'marginBottom': '40px' }}>Registration</h2>\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.username\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.password\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.password_confirm\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\tRegister User\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    render() {\n        const {errors} = this.state;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Login</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"username\"\n                    placeholder=\"Username\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.username\n                    })}\n                    name=\"username\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.username }\n                    />\n                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })} \n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Login User\n                    </button>\n                </div>\n                {errors.authentication && (<div className=\"invalid-feedback\" style={{display: 'block'}}>{errors.authentication}</div>)}\n            </form>\n            <Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n        </div>\n        )\n    }\n}\n// TODO fix up validation\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)\n","// Home.js\n\nimport React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home Component\n            </div>\n        );\n    }\n}","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forgotPassword, forgotPasswordEmailNotSent } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\temail: '',\n\t\t\t\terrors: {}\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\terrors: nextProps.errors\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.forgotPasswordEmailNotSent();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t\temail: this.state.email,\n\t\t}\n\t\tthis.props.forgotPassword(user);\n\t}\n\n\trender() {\n\t\tconst {errors} = this.state;\n\t\treturn(\n\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n\t\t\t<h2 style={{marginBottom: '40px'}}>Forgot password?</h2>\n\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t</div>\n\t\t)\n\t}\n}\n\nForgotPassword.propTypes = {\n\tforgotPassword: PropTypes.func.isRequired,\n\tforgotPasswordEmailNotSent: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors\n})\n\nexport  default connect(mapStateToProps, { forgotPassword, forgotPasswordEmailNotSent })(ForgotPassword)\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../actions/authentication';\nimport classnames from 'classnames';\nimport $ from 'jquery'; \n\nclass ResetPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\tpassword: '',\n        password_confirm: '',\n\t\t\t\terrors: {}\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\terrors: nextProps.errors\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// http://localhost:8000/api/v1/reset/Mw/52k-907cfda87df2f1f3b009/\n\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tconsole.log('url params ', this.props.match.params)\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\tuid: this.props.match.params.uid,\n\t\t\tcsrfmiddlewaretoken: this.props.match.params.token,\n\t\t\tpassword: this.state.password,\n      password_confirm: this.state.password_confirm\n\t\t}\n\t\tthis.props.resetPassword(user);\n\t}\n\n\t// https://www.techiediaries.com/django-react-forms-csrf-axios/\n\tgetCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = $.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\trender() {\n\t\tconst {errors} = this.state;\n\t\tvar csrftoken = this.getCookie('csrftoken');\n\t\treturn(\n\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n\t\t\t<h2 style={{marginBottom: '40px'}}>Enter a new password</h2>\n\t\t\t<form onSubmit={ this.handleSubmit }>\n \t\t\t\t<div className=\"form-group\">\n          <input\n          type=\"password\"\n          placeholder=\"Password\"\n          className={classnames('form-control form-control-lg', {\n              'is-invalid': errors.password\n          })}\n          name=\"password\"\n          onChange={ this.handleInputChange }\n          value={ this.state.password }\n          />\n          {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n\t      </div>\n\t      <div className=\"form-group\">\n          <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className={classnames('form-control form-control-lg', {\n              'is-invalid': errors.password_confirm\n          })}\n          name=\"password_confirm\"\n          onChange={ this.handleInputChange }\n          value={ this.state.password_confirm }\n          />\n          {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n\t      </div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\tSet new password\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t</div>\n\t\t)\n\t}\n}\n\nResetPassword.propTypes = {\n\tresetPassword: PropTypes.func.isRequired,\n//\tforgotPasswordEmailNotSent: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors\n})\n\nexport  default connect(mapStateToProps, { resetPassword })(ResetPassword)\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport ForgotPassword from './components/ForgotPassword';\nimport ResetPassword from './components/ResetPassword';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nif(localStorage.jwtToken) {\n\tsetAuthToken(localStorage.jwtToken);\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t\twindow.location.href = '/login';\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route path=\"/reset/:uid?/:token?\" component={ ResetPassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept();\n}\n"],"sourceRoot":""}
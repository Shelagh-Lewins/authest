{"version":3,"sources":["reducers/errorReducer.js","is-empty.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","setAuthToken.js","actions/authentication.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Login.js","components/Home.js","components/Account.js","components/ForgotPassword.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","updeep","require","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","user","combineReducers","errors","state","arguments","action","type","console","log","payload","auth","token","constant","username","email","slug","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","setCurrentUser","logoutUser","history","dispatch","fetch","method","then","res","ok","json","localStorage","removeItem","push","logout user","getUserInfo","_ref","getState","headers","Authorization","concat","Accept","Content-Type","get user info","setUserInfo","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","message","submitHandler","event","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","toConsumableArray","assign","noValidate","children","Register","password","password_confirm","handleInputChange","handleSubmit","defineProperty","target","name","password1","password2","registerUser","nextProps","errorTexts","registration","map","data","index","key","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","style","display","formData","FormData","append","body","response","forEach","error","text","Login","loginUser","authentication","setItem","Home","Account","match","params","href","ForgotPassword","forgotPasswordEmailNotSent","forgotPassword","marginTop","width","marginBottom","classnames","is-invalid","catch","err","jwtToken","currentTime","Date","now","exp","location","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","navigator","serviceWorker","ready","unregister","render","src_App_0","document","getElementById"],"mappings":"gTAIMA,EAAe,GCMNC,EARC,SAACC,GACb,YACcC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,QCK/CE,EAASC,EAAQ,KAEfT,EAAe,CACpBU,iBAAmB,EACnBC,yBAA2B,EAC3BC,uBAAyB,EACzBC,KAAQ,ICZMC,cAAgB,CAC9BC,OHDc,WAAwC,IAA/BC,EAA+BC,UAAAX,OAAA,QAAAH,IAAAc,UAAA,GAAAA,UAAA,GAAvBjB,EAAckB,EAASD,UAAAX,OAAA,EAAAW,UAAA,QAAAd,EACtD,OAAOe,EAAOC,MACb,IINwB,aJQvB,OADAC,QAAQC,IAAI,iBAAkBH,EAAOI,SAC9BJ,EAAOI,QAGf,QACC,OAAON,IGNTO,KDcD,WAAuD,IAA/BP,EAA+BC,UAAAX,OAAA,QAAAH,IAAAc,UAAA,GAAAA,UAAA,GAAvBjB,EAAckB,EAASD,UAAAX,OAAA,EAAAW,UAAA,QAAAd,EACtD,OAAOe,EAAOC,MACb,IErB8B,mBFsB7B,OAAOX,EAAO,CACbE,iBAAoBT,EAAQiB,EAAOI,QAAQE,OAC3CX,KAAQL,EAAOiB,SAAS,CAAED,MAASN,EAAOI,QAAQE,SAChDR,GAEJ,IEzB2B,gBF0B1B,OAAOR,EAAO,CACbK,KAAQ,CACPa,SAAYR,EAAOI,QAAQI,SAC3BC,MAAST,EAAOI,QAAQK,MACxBC,KAAQV,EAAOI,QAAQM,OAEtBZ,GAEJ,IEnCkC,uBFoCjC,OAAOR,EAAO,CACbE,iBAAmB,EACnBG,KAAQL,EAAOiB,SAAS,KACtBT,GAGJ,IEpC4C,iCFqC3C,OAAOR,EAAO,CACbG,yBAA2B,EAC3BC,uBAAyB,GACvBI,GAGJ,IE5CwC,6BF6CvC,OAAOR,EAAO,CACbG,yBAA2B,EAC3BC,uBAAyB,GACvBI,GAGJ,IEjDqC,0BFkDpC,OAAOR,EAAO,CACbG,yBAA2B,EAC3BC,uBAAyB,GACvBI,GAGJ,QACC,OAAOA,MGlDKa,MAVDC,YACbC,EAHqB,GAKrBC,YAAQC,YAAgBC,KACvBC,OAAOC,8BAA+BD,OAAOC,iCCAhCC,EAVM,SAAAb,GAOpB,OANGA,GAGU,aCsFDc,EAAiB,SAAAd,GAC7B,MAAO,CACNL,KH3F8B,mBG4F9BG,QAAWE,IAUAe,EAAa,SAACC,GAAD,OAAa,SAAAC,GACtC,OAAOC,MAAM,4BAA6B,CACzCC,OAAU,SAETC,KAAK,SAAAC,GACL,GAAGA,EAAIC,GACN,OAAOD,EAAIE,OAEXC,aAAaC,WAAW,YACxBZ,GAAa,GACbG,EAAQU,KAAK,KAEbT,EAAS,CACRtB,KHpHqB,aGqHrBG,QAAW,CAAE6B,cAAe,wBAI9BP,KAAK,WACL,OAAOH,EAxBF,CACNtB,KHjGkC,6BGwIvBiC,EAAc,SAAAC,GAAA,IAAG7B,EAAH6B,EAAG7B,MAAH,OAAe,SAACiB,EAAUa,GACpD,IAAMC,EAAU,CACfC,cAAA,SAAAC,OAA0BjC,GAC1BkC,OAAU,mBACVC,eAAgB,oBAGjB,OAAOjB,MAAM,0BAA2B,CACvCa,UACAZ,OAAU,QAETC,KAAK,SAAAC,GACL,GAAGA,EAAIC,GACN,OAAOD,EAAIE,OAEXN,EAAS,CACRtB,KH1JqB,aG2JrBG,QAAW,CAAEsC,gBAAiB,+BAIhChB,KAAK,SAAA/B,GACL,GAAIA,EAIJ,OADAO,QAAQC,IAAI,QAASR,GACd4B,EAjCiB,SAAA5B,GAC1B,MAAO,CACNM,KHlI2B,gBGmI3BG,QAAWT,GA8BMgD,CAAY,CAC3BnC,SAAYb,EAAKa,SACjBC,MAASd,EAAKc,MACdC,KAAQf,EAAKe,8BChKXkC,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAAJ,IAClBE,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAA0D,GAAAO,KAAAH,KAAMH,KACD/C,MAAQ,CACZsD,cAAgB,GAHCN,4EAMNO,GACZA,EAAEC,iBACFN,KAAKO,SAAS,SAAAC,GAAS,MAAK,CAC3BJ,cAAiBI,EAAUJ,iDAIpBC,GACRA,EAAEC,iBACFN,KAAKH,MAAMxB,WAAW2B,KAAKH,MAAMvB,0CAGzB,IAAAmC,EAAAT,KAAAU,EAC0BV,KAAKH,MAAMxC,KAArCb,EADAkE,EACAlE,gBAAiBG,EADjB+D,EACiB/D,KACzBO,QAAQC,IAAI,iBAAkB6C,KAAKH,MAAMxC,MACzC,IAAMsD,EACLC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZpE,EAAKa,UAAYoD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAAYpE,EAAKa,WAC1FoD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,WAAWG,QAASlB,KAAKmB,SAASC,KAAKpB,OAA9D,YAGrBqB,EACLT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,aAA9B,aAEDL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,WAIH,OACCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,eACAL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiB9D,KAAK,SAASqE,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBACrLR,QAAS,SAACb,GAAOI,EAAKL,aAAaC,KACnCO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,4BAAAxB,OAA8BS,KAAKlD,MAAMsD,aAAe,OAAS,IAAMuB,GAAG,0BACtFnF,EAAkBmE,EAAYU,EAC/BT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuB9D,KAAK,SAAS2E,YAAY,SAASF,aAAW,WACtFd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuC9D,KAAK,UAA9D,oBAjDe4E,aAkENC,cAJS,SAAChF,GAAD,MAAY,CACnCO,KAAQP,EAAMO,OAGyB,CAAEgB,cAA3ByD,CAAyCC,YAAWnC,kFCrD9CoC,cACpB,SAAAA,IAAc,IAAAlC,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAAgC,IACblC,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAA8F,GAAA7B,KAAAH,QAMDlD,MAAQ,CACPmF,aAAe,GARFnC,EA+DdoC,eAAiB,GA/DHpC,EAuEdqC,iBAAmB,SAACC,GAEnB,GAAIA,EAAKC,SAASC,YACjB,OAAOF,EAAKG,kBAIZ,GAAIH,EAAKC,SAASG,aAChB,OAAQ1C,EAAKoC,eAAL,GAAA3C,OAAuB6C,EAAKnF,KAA5B,aAET,IAAK,IAAMwF,KAAc3C,EAAKoC,eAC3B,GAAIE,EAAKC,SAASI,GAChB,OAAO3C,EAAKoC,eAAeO,IAnFrB3C,EA6Fd4C,SAAW,WACV,IAAMC,EAASC,IAASC,YAAT3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KACTiD,EAAaJ,EAAOvG,OAQ1B,IAA+B,IAA3BuG,EAAOK,gBAA2B,CACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CAEpC,IAAMb,EAAOO,EAAOM,GAMdC,EAAad,EAAKe,WAAWC,cAAc,qBAGjD,GAAIF,GAA8C,WAAhCd,EAAKiB,SAASC,cAC/B,GAAKlB,EAAKC,SAASkB,MAIlBL,EAAWM,YAAc,OAJA,CACzB,IAAIC,EAAU3D,EAAKqC,iBAAiBC,IAASA,EAAKG,kBAClDW,EAAWM,YAAcC,GAO5B,OAAO,EAGP,IAAK,IAAIR,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACpC,IAAMb,EAAOO,EAAOM,GACdC,EAAad,EAAKe,WAAWC,cAAc,qBAC7CF,GAA8C,WAAhCd,EAAKiB,SAASC,gBAC/BJ,EAAWM,YAAc,IAI3B,OAAO,GAxIK1D,EA4Id4D,cAAgB,SAAAC,GACfA,EAAMrD,iBAEFR,EAAK4C,YACR5C,EAAKD,MAAM+D,SAASD,GAGrB7D,EAAKS,SAAS,CAAE0B,aAAe,KAhJ/BnC,EAAK4C,SAAW5C,EAAK4C,SAAStB,KAAdlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KAChBA,EAAK+D,gBAAkB/D,EAAK+D,gBAAgBzC,KAArBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KAJVA,mFAWM,IAAAW,EAAAT,KACnB,GAAGA,KAAKH,MAAMiE,gBAAiB,CAgB9B,IAAMnB,EAASC,IAASC,YAAY7C,MAE9B+D,EAAW/D,KAAKH,MAAMiE,gBAAgBE,OACtCC,EAAWjE,KAAKH,MAAMiE,gBAAgBI,OAEtCC,EAAgBxB,EAAOS,cAAP,IAAA7D,OAAyBwE,IAEzCK,EAAgBzB,EAAOS,cAAP,IAAA7D,OAAyB0E,IAE3CE,aAAyBE,aAAeD,aAAyBC,cACpEF,EAAcG,QAAU,SAACjE,GAAD,OAAOI,EAAKoD,gBAAgBE,EAAUE,EAAU5D,IACxE+D,EAAcE,QAAU,SAACjE,GAAD,OAAOI,EAAKoD,gBAAgBE,EAAUE,EAAU5D,8CAK3D2D,EAAQE,EAAQ7D,GAG/B,IAAMkE,EAAO3B,IAASC,YAAY7C,MAElC,GAAIuE,aAAgBF,YAAa,CAC9B,IAAMF,EAAgBI,EAAKnB,cAAL,IAAA7D,OAAuByE,IACvCI,EAAgBG,EAAKnB,cAAL,IAAA7D,OAAuB2E,IAEzCC,aAAyBE,aAAeD,aAAyBC,cAChEF,EAAcnI,QAAUoI,EAAcpI,MACxCoI,EAAcI,kBAAkB,IAEjCJ,EAAcI,kBAAkBxE,KAAKH,MAAMiE,gBAAgBL,4CAiGhE,IAAM5D,EAAK3D,OAAAuI,EAAA,EAAAvI,CAAA,GAAQ8D,KAAKH,OAGpB6E,EAAa,GAWjB,OAVI7E,EAAMkB,YACT2D,EAAUxI,OAAAyI,EAAA,EAAAzI,CAAO2D,EAAMkB,kBAChBlB,EAAMkB,WAGVf,KAAKlD,MAAMmF,aACdyC,EAAW1F,KAAK,iBAKhB4B,EAAAC,EAAAC,cAAA,OAAA5E,OAAA0I,OAAA,GACK/E,EADL,CAECkB,UAAW2D,EACXG,YAAU,EACVjB,SAAU5D,KAAK0D,gBAEd1D,KAAKH,MAAMiF,iBAhL2BjD,aCZrCkD,cACL,SAAAA,IAAc,IAAAjF,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAA+E,IACbjF,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAA6I,GAAA5E,KAAAH,QACKlD,MAAQ,CACZU,SAAY,GACZC,MAAS,GACTuH,SAAY,GACZC,iBAAoB,IAErBnF,EAAKoF,kBAAoBpF,EAAKoF,kBAAkB9D,KAAvBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KACzBA,EAAKqF,aAAerF,EAAKqF,aAAa/D,KAAlBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KATPA,iFAYIO,GACjBL,KAAKO,SAALrE,OAAAkJ,EAAA,EAAAlJ,CAAA,GACEmE,EAAEgF,OAAOC,KAAOjF,EAAEgF,OAAOrJ,6CAIfqE,GACZA,EAAEC,iBACF,IAAM3D,EAAO,CACZa,SAAYwC,KAAKlD,MAAMU,SACvBC,MAASuC,KAAKlD,MAAMW,MACpB8H,UAAavF,KAAKlD,MAAMkI,SACxBQ,UAAaxF,KAAKlD,MAAMmI,kBAGzBjF,KAAKH,MAAM4F,aAAa9I,EAAMqD,KAAKH,MAAMvB,2DAGhBoH,GACtBA,EAAUrI,KAAKb,iBACjBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEtB0G,EAAU7I,QACZmD,KAAKO,SAAS,CACb1D,OAAU6I,EAAU7I,qDAMnBmD,KAAKH,MAAMxC,KAAKb,iBAClBwD,KAAKH,MAAMvB,QAAQU,KAAK,sCAMjB,IAEAnC,EAAWmD,KAAKH,MAAhBhD,OACJ8I,EAAa,GAuBjB,OArBI9I,EAAO+I,eACVD,EAAa9I,EAAO+I,aAAaC,IAAI,SAACC,EAAMC,GAC1C,OACEnF,EAAAC,EAAAC,cAAA,MAAIkF,IAAKD,GAAQD,MAmBrBlF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACCrF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACoF,EAAD,CAAetC,SAAW5D,KAAKmF,aAAerB,gBAAkB,CAC/DE,OAAU,WACVE,OAAU,mBACVT,QAAW,yBAEX7C,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,SAAX,iBACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,QACLqI,KAAK,QACLkB,UAAU,EACV7E,GAAG,QACH8E,SAAWzG,KAAKkF,kBAChBlJ,MAAQgE,KAAKlD,MAAMW,MACnBmE,YAAY,6BAEbhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAChBH,EAAAC,EAAAC,cAAA,6FAKJF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,OACLqI,KAAK,WACL3D,GAAG,WACH6E,UAAU,EACVC,SAAWzG,KAAKkF,kBAChBlJ,MAAQgE,KAAKlD,MAAMU,SACnBoE,YAAY,wBAEbhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAChBH,EAAAC,EAAAC,cAAA,mFAKJF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,WACLqI,KAAK,WACLkB,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRhF,GAAG,WACH3F,MAAQgE,KAAKlD,MAAMkI,SACnBpD,YAAY,sBACZ6E,SAAWzG,KAAKkF,oBAEjBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAIlBH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,oBAAX,yBACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,WACLqI,KAAK,mBACL3D,GAAG,mBACH6E,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3K,MAAQgE,KAAKlD,MAAMmI,iBACnBrD,YAAY,wBACZ6E,SAAWzG,KAAKkF,oBAEjBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAuBH,EAAAC,EAAAC,cAAA,UACvCF,EAAAC,EAAAC,cAAA,oFACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,2DAKJF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,UAAQ7D,KAAK,SAAS8D,UAAU,mBAAhC,oBAKEH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACHvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACEvJ,EAAO+I,cAAgBhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB6F,MAAO,CAAEC,QAAW,UAAWjG,EAAAC,EAAAC,cAAA,UAAK6E,eAjL5E9D,aAqMRC,cALS,SAAAhF,GAAK,MAAK,CACjCO,KAAQP,EAAMO,KACdR,OAAUC,EAAMD,SAGsB,CAAE4I,aHlMb,SAAC9I,EAAM2B,GAAP,OAAmB,SAAAC,GAC9C,IAAIuI,EAAY,IAAIC,SAGpB,IAAI,IAAIzB,KAAQ3I,EACfmK,EAASE,OAAO1B,EAAM3I,EAAK2I,IAO5B9G,MAAM,kCAAmC,CAAEC,OAAU,OAAQwI,KAAQH,IAEnEpI,KAAK,SAAAwI,GAAQ,OACbA,EAASrI,OAAOH,KAAK,SAAAoH,GAAI,MAAK,CAC7BA,KAAQA,EACRlH,GAAMsI,EAAStI,MAEdF,KAAK,SAAAC,GACN,GAAGA,EAAIC,GACNN,EAAQU,KAAK,SACP,CAKN,IAAI2G,EAAa,GAEjBzJ,OAAOC,KAAKwC,EAAImH,MAAMqB,QAAQ,SAAUC,GACvCzI,EAAImH,KAAKsB,GAAOvB,IAAI,SAACwB,GACpB1B,EAAW3G,KAAKqI,OAIlB9I,EAAS,CACRtB,KH/CoB,aGgDpBG,QAAW,CAAEwI,aAAgBD,aG6JpB7D,CAA0CC,YAAWgD,ICrM9DuC,cACL,SAAAA,IAAc,IAAAxH,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAAsH,IACbxH,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAAoL,GAAAnH,KAAAH,QACKlD,MAAQ,CACZW,MAAS,GACTuH,SAAY,IAEblF,EAAKoF,kBAAoBpF,EAAKoF,kBAAkB9D,KAAvBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KACzBA,EAAKqF,aAAerF,EAAKqF,aAAa/D,KAAlBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KAPPA,mFAWVE,KAAKH,MAAMxC,KAAKb,iBAClBwD,KAAKH,MAAMvB,QAAQU,KAAK,uDAIA0G,GACtBA,EAAUrI,KAAKb,iBACjBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEtB0G,EAAU7I,QACZmD,KAAKO,SAAS,CACb1D,OAAU6I,EAAU7I,mDAKLwD,GACjBL,KAAKO,SAALrE,OAAAkJ,EAAA,EAAAlJ,CAAA,GACEmE,EAAEgF,OAAOC,KAAOjF,EAAEgF,OAAOrJ,6CAIfqE,GACZA,EAAEC,iBACF,IAAM3D,EAAO,CACZc,MAASuC,KAAKlD,MAAMW,MACpBuH,SAAYhF,KAAKlD,MAAMkI,UAExBhF,KAAKH,MAAM0H,UAAU5K,EAAMqD,KAAKH,MAAMvB,0CAG9B,IACAzB,EAAWmD,KAAKH,MAAhBhD,OACR,OACC+D,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACCrF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACoF,EAAD,CAAetC,SAAW5D,KAAKmF,cAC9BvE,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,SAAX,iBACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,QACLqI,KAAK,QACL3D,GAAG,QACH6E,UAAU,EACVC,SAAWzG,KAAKkF,kBAChBlJ,MAAQgE,KAAKlD,MAAMW,MACnBmE,YAAY,8BAEbhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAIlBH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACCtJ,KAAK,WACLqI,KAAK,WACLkB,UAAU,EACV7E,GAAG,WACH3F,MAAQgE,KAAKlD,MAAMkI,SACnBpD,YAAY,WACZ6E,SAAWzG,KAAKkF,oBAEjBtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAIlBH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,UAAQ7D,KAAK,SAAS8D,UAAU,mBAAhC,WAKEH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACHvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACEvJ,EAAO2K,gBAAkB5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB6F,MAAO,CAAEC,QAAW,UAAWjG,EAAAC,EAAAC,cAAA,UAAKjE,EAAO2K,oBAIxG5G,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,mBAA9B,4BAhGgBY,aAkHJC,cALQ,SAAChF,GAAD,MAAY,CACnCO,KAAQP,EAAMO,KACdR,OAAUC,EAAMD,SAGwB,CAAE0K,UJnElB,SAAC5K,EAAM2B,GAAP,OAAmB,SAAAC,GAC3C,IAAIuI,EAAY,IAAIC,SAGpB,IAAI,IAAIzB,KAAQ3I,EACfmK,EAASE,OAAO1B,EAAM3I,EAAK2I,IAG5B,OAAO9G,MAAM,2BAA4B,CAAEC,OAAU,OAAQwI,KAAQH,IACnEpI,KAAK,SAAAC,GACL,GAAGA,EAAIC,GAEN,OADAN,EAAQU,KAAK,KACNL,EAAIE,OAEXN,EAAS,CACRtB,KHtEqB,aGuErBG,QAAW,CAAEoK,eAAkB,yEAIjC9I,KAAK,SAAAoH,GACL,GAAIA,EAQJ,OAHAhH,aAAa2I,QAAQ,WAAY3B,EAAKE,KACtC7H,EAAa2H,EAAKE,KAClBzH,EAASW,EAAY,CAAE5B,MAASwI,EAAKE,OAC9BzH,EAASH,EAAe,CAC9Bd,MAASwI,EAAKE,YIqCFlE,CAAwCwF,GCxHnCI,mLAEnB,OACC9G,EAAAC,EAAAC,cAAA,oCAH+Be,aCI5B8F,cACL,SAAAA,IAAc,IAAA7H,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAA2H,IACb7H,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAAyL,GAAAxH,KAAAH,QACKlD,MAAQ,CACZD,OAAU,IAHEiD,yFAOY4F,GACrBA,EAAUrI,KAAKb,iBAClBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEtB0G,EAAU7I,QACZmD,KAAKO,SAAS,CACb1D,OAAU6I,EAAU7I,qDAMlBmD,KAAKH,MAAMxC,KAAKb,iBACnBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEzB9B,QAAQC,IAAI,cAAe6C,KAAKH,MAAM+H,MAAMC,yCAIzB7H,KAAKlD,MAAhBD,OAER,OAEC+D,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACCrF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACCvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACCxF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW+G,KAAK,KAA7B,6BAlCgBjG,aAoDNC,cALQ,SAAChF,GAAD,MAAY,CACnCO,KAAQP,EAAMO,KACdR,OAAUC,EAAMD,SAGDiF,CAA0B6F,oBCnDpCI,cACL,SAAAA,IAAc,IAAAjI,EAAA,OAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAA+H,IACbjI,EAAA5D,OAAA+D,EAAA,EAAA/D,CAAA8D,KAAA9D,OAAAgE,EAAA,EAAAhE,CAAA6L,GAAA5H,KAAAH,QACKlD,MAAQ,CACZW,MAAS,GACTZ,OAAU,IAEXiD,EAAKoF,kBAAoBpF,EAAKoF,kBAAkB9D,KAAvBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KACzBA,EAAKqF,aAAerF,EAAKqF,aAAa/D,KAAlBlF,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4D,KAPPA,yFAUY4F,GACtBA,EAAUrI,KAAKb,iBACjBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEtB0G,EAAU7I,QACZmD,KAAKO,SAAS,CACb1D,OAAU6I,EAAU7I,qDAMnBmD,KAAKH,MAAMxC,KAAKb,iBAClBwD,KAAKH,MAAMvB,QAAQU,KAAK,KAEzBgB,KAAKH,MAAMmI,uEAGM3H,GACjBL,KAAKO,SAALrE,OAAAkJ,EAAA,EAAAlJ,CAAA,GACEmE,EAAEgF,OAAOC,KAAOjF,EAAEgF,OAAOrJ,6CAIfqE,GACZA,EAAEC,iBACF,IAAM3D,EAAO,CACZc,MAASuC,KAAKlD,MAAMW,OAErBuC,KAAKH,MAAMoI,eAAetL,oCAGlB,IACAE,EAAWmD,KAAKlD,MAAhBD,OACR,OACC+D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY6F,MAAQ,CAAEsB,UAAa,OAAQC,MAAS,UAClEvH,EAAAC,EAAAC,cAAA,MAAI8F,MAAQ,CAAEwB,aAAgB,SAA9B,oBACAxH,EAAAC,EAAAC,cAAA,QAAM8C,SAAW5D,KAAKmF,cACrBvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,SACC7D,KAAK,QACL2E,YAAY,gBACZb,UAAWsH,IAAW,+BAAgC,CACrDC,aAAczL,EAAOY,QAEtB6H,KAAK,QACLmB,SAAWzG,KAAKkF,kBAChBlJ,MAAQgE,KAAKlD,MAAMW,QAEnBZ,EAAOY,OAAUmD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBlE,EAAOY,QAE7DmD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,UAAQ7D,KAAK,SAAS8D,UAAU,mBAAhC,oCAKDf,KAAKH,MAAMxC,KAAKZ,yBAA4BmE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,6BAAqDf,KAAKlD,MAAMW,eApEpFoE,aAsFbC,cALQ,SAAChF,GAAD,MAAY,CACnCO,KAAQP,EAAMO,KACdR,OAAUC,EAAMD,SAGwB,CAAEoL,eP6Fb,SAACxK,GAAD,OAAW,SAAAc,GACxC,IAAIuI,EAAY,IAAIC,SAEpB,IAAI,IAAIzB,KAAQ7H,EACfqJ,EAASE,OAAO1B,EAAM7H,EAAM6H,IAG7B,OAAO9G,MAAM,oCAAqC,CAAEC,OAAU,OAAQwI,KAAQH,IAC5EpI,KAAK,SAAAC,GACL,OAAOA,EAAIE,SAEXH,KAAK,WACL,OAAOH,EAjBF,CACNtB,KH/KwC,iCGiMvCsL,MAAM,SAAAC,GACNtL,QAAQC,IAAI,SAAUqL,EAAI/E,SAC1BlF,EAAS,CACRtB,KH3MsB,aG4MtBG,QAAWoL,EAAItB,SAASpB,WO/G+BkC,2BPiFjB,SAAA1K,GACzC,MAAO,CACNL,KHxK4C,oCUqF9B6E,CAAyEiG,iBC1EzF,GAAGjJ,aAAa2J,SAAU,CACzBtK,EAAaW,aAAa2J,UAC1B9K,EAAMY,SAASH,EAAeU,aAAa2J,WAE3C,IAAMC,EAAcC,KAAKC,MAAQ,IAC9B9J,aAAa2J,SAASI,IAAMH,IAC9B/K,EAAMY,SAASF,KACfJ,OAAO6K,SAAShB,KAAO,cA0BViB,mLApBb,OACCnI,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAUrL,MAAUA,GACnBiD,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACCrI,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoI,EAAD,MACAtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY5B,IAClC9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYvE,IAC1CnE,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAYhC,IACvC1G,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYvB,IAChDnH,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAY3B,eAZxB9F,aCpBE0H,QACW,cAA7BtL,OAAO6K,SAASU,UAEe,UAA7BvL,OAAO6K,SAASU,UAEhBvL,OAAO6K,SAASU,SAAS5B,MACvB,2DA+GA,kBAAmB6B,WACrBA,UAAUC,cAAcC,MAAMjL,KAAK,SAAAkH,GACjCA,EAAagE,eCrHlBhH,IAASiH,OACRjJ,EAAAC,EAAAC,cAACgJ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.18ca2a0d.chunk.js","sourcesContent":["// errorReducer.js\n\nimport { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\tconsole.log('error reducer ', action.payload);\n\t\t\treturn action.payload;\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// is-empty.js\n\nconst isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","// authReducer.js\n\nimport {\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from '../actions/types';\nimport isEmpty from '../is-empty';\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'user': {}\n};\n\n// TODO use updeep\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user profile\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user profile\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n\t'errors': errorReducer,\n\t'auth': authReducer,\n});\n","// types.js\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\n\n\n// Forgot password\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst inititalState = {};\n\nconst store = createStore(\n\trootReducer, \n\tinititalState, \n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","export var authToken;\n\nconst setAuthToken = token => {\n\tif(token) {\n\t\tauthToken = token;\n\t} else {\n\t\tauthToken = 'undefined';\n\t}\n\n\treturn authToken;\n}\n\nexport default setAuthToken;\n","// authentication.js\nimport setAuthToken from '../setAuthToken';\n// import jwt_decode from 'jwt-decode';\nimport {\n\tGET_ERRORS,\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from './types';\n\nexport const registerUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\tfetch('/api/v1/rest-auth/registration/', { 'method': 'POST', 'body': formData })\n\t\t// this nested set of callbacks allows errors to be found and the server error message to be reported\n\t\t.then(response => \n\t\t\tresponse.json().then(data => ({\n\t\t\t\t'data': data,\n\t\t\t\t'ok': response.ok\n\t\t\t})\n\t\t\t).then(res => {\n\t\t\t\tif(res.ok) {\n\t\t\t\t\thistory.push('/');\n\t\t\t\t} else {\n\t\t\t\t\t// errors are returned as an object with a key per possible error, e.g. username, email\n\t\t\t\t\t// each error then is an array of texts\n\t\t\t\t\t// informative but overcomplicated!\n\t\t\t\t\t// user just wants to see a list of error texts explaining why registration failed\n\t\t\t\t\tlet errorTexts = [];\n\n\t\t\t\t\tObject.keys(res.data).forEach(function (error) {\n\t\t\t\t\t\tres.data[error].map((text) => { // eslint-disable-line array-callback-return\n\t\t\t\t\t\t\terrorTexts.push(text);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t\t'payload': { 'registration': errorTexts },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n};\n \nexport const loginUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/login/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\thistory.push('/');\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'authentication': 'Unable to log in with the provided credentials, please try again.' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(data => {\n\t\t\tif(!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// token is an object { key: value }\n\t\t\t// localStorage can only store a string\n\t\t\tlocalStorage.setItem('jwtToken', data.key);\n\t\t\tsetAuthToken(data.key);\n\t\t\tdispatch(getUserInfo({ 'token': data.key })); // get the user profile\n\t\t\treturn dispatch(setCurrentUser({\n\t\t\t\t'token': data.key, // just set the token\n\t\t\t}));\n\t\t});\n};\n\nexport const setCurrentUser = token => {\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': token,\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\treturn fetch('/api/v1/rest-auth/logout/', {\n\t\t'method': 'POST',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem('jwtToken');\n\t\t\t\tsetAuthToken(false);\n\t\t\t\thistory.push('/');\n\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'logout user': 'Unable to logout' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(logoutUserComplete());\n\t\t});\n};\n// TODO parameterise api path\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = ({ token }) => (dispatch, getState) => {\n\tconst headers = {\n\t\t'Authorization': `Token ${token}`,\n\t\t'Accept': 'application/json',\n\t\t'Content-Type': 'application/json',\n\t};\n\n\treturn fetch('/api/v1/rest-auth/user/', {\n\t\theaders,\n\t\t'method': 'GET',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'get user info': 'Unable to get user info' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(user => {\n\t\t\tif(!user) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log('user ', user);\n\t\t\treturn dispatch(setUserInfo({\n\t\t\t\t'username': user.username,\n\t\t\t\t'email': user.email,\n\t\t\t\t'slug': user.slug,\n\t\t\t}));\n\t\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/password/reset/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(forgotPasswordEmailSent());\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n// This function does not yet work. There is something wrong with the fetch request, perhaps the csrf tokens which I don't know how to generate correctly. The code here and in the ResetPassword component should be fixed or removed at some point.\n// For now, a Django template is used for entering the new password at http://localhost:8000/api/v1/reset/Mw/52l-11fe5a58b91d894386e8/\n\n// https://www.techiediaries.com/django-react-forms-csrf-axios/\n/*\nfunction getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = $.trim(cookies[i]);\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}\n\nexport const resetPassword = (data) => dispatch => {\n\tconsole.log('resetPassword action creator. data ', data);\n\n\tvar body = '';\n\tvar csrftoken = getCookie('csrftoken');\n\n\tbody += `csrfmiddlewaretoken=${csrftoken}&`;\n\tbody += `new_password1=${data.password}&`;\n\tbody += `new_password2=${data.password_confirm}`;\n\n\tconsole.log('token ', data.csrfmiddlewaretoken);\n\tconsole.log('body ', body);\n\tconsole.log('data.uid ', data.uid);\n\n\treturn fetch(`/api/v1/reset1/${data.uid}/set-password/`,\n\t\t{ 'credentials': 'include', 'method': 'POST', 'mode': 'same-origin',\n\t\t\t'headers': {\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml',\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t'X-CSRFToken': csrftoken\n\t\t\t}, 'body': body })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(token => {\n\t\t\treturn dispatch(resetPasswordComplete(token));\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n*/\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\t\tconsole.log('navbar. state ', this.props.auth);\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tsubmitHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(event);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's submitHandler\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.submitHandler}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t// there may be more than one error, e.g. username and email already in use\n\t\tconst { errors } = this.props;\n\t\tlet errorTexts = [];\n\n\t\tif (errors.registration) {\n\t\t\terrorTexts = errors.registration.map((data, index) => {\n\t\t\t  return (\n\t\t\t    <li key={index}>{data}</li>\n\t\t\t  );\n\t\t\t});\n\t\t}\n\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email addres to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{errors.registration && <div className=\"form-feedback \" style={{ 'display': 'block' }}><ul>{errorTexts}</ul></div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\tconst { errors } = this.props;\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{errors.authentication && <div className=\"form-feedback \" style={{ 'display': 'block' }}><ul>{errors.authentication}</ul></div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n// TODO fix up validation\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// Home.js\n\nimport React, { Component } from 'react';\n\nexport default class Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tHome Component\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tconsole.log('url params ', this.props.match.params);\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\t// var csrftoken = this.getCookie('csrftoken');\n\t\treturn(\n\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<a className=\"nav-link\" href=\"/\">Change password</a>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps,)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forgotPassword, forgotPasswordEmailNotSent } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.forgotPasswordEmailNotSent();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.forgotPassword(user);\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn(\n\t\t\t<div className=\"container\" style={ { 'marginTop': '50px', 'width': '700px' } }>\n\t\t\t\t<h2 style={ { 'marginBottom': '40px' } }>Forgot password?</h2>\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { forgotPassword, forgotPasswordEmailNotSent })(ForgotPassword);\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Account from './components/Account';\nimport ForgotPassword from './components/ForgotPassword';\n// import ResetPassword from './components/ResetPassword';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password load the bootstrap css from static/bootstrap\n\nif(localStorage.jwtToken) {\n\tsetAuthToken(localStorage.jwtToken);\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t\twindow.location.href = '/login';\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t{/* <Route path=\"/reset/:uid?/:token?\" component={ ResetPassword } /> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
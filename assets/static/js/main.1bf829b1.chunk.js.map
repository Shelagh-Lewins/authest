{"version":3,"sources":["reducers/errorReducer.js","is-empty.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","setAuthToken.js","actions/authentication.js","components/Navbar.js","components/Register.js","components/Login.js","components/Home.js","components/ForgotPassword.js","components/ResetPassword.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","user","combineReducers","errors","state","arguments","action","type","payload","auth","objectSpread","console","log","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","token","setCurrentUser","logoutUser","history","dispatch","localStorage","removeItem","push","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","href","onClick","onLogout","bind","src","avatar","alt","name","title","style","width","marginRight","guestLinks","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","concat","id","placeholder","Component","connect","withRouter","Register","email","password","password_confirm","handleInputChange","assertThisInitialized","handleSubmit","defineProperty","target","registerUser","nextProps","marginTop","marginBottom","onSubmit","classnames","is-invalid","onChange","formData","FormData","append","fetch","method","body","then","res","catch","err","response","data","Login","username","loginUser","json","setItem","key","message","Home","ForgotPassword","forgotPasswordEmailNotSent","forgotPassword","ResetPassword","match","params","uid","csrfmiddlewaretoken","resetPassword","cookieValue","document","cookie","cookies","split","i","$","substring","decodeURIComponent","csrftoken","getCookie","credentials","mode","headers","Accept","Content-Type","X-CSRFToken","jwtToken","currentTime","Date","now","exp","location","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bf829b1.chunk.js","sourcesContent":["// errorReducer.js\n\nimport { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n}","// is-empty.js\n\nconst isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","// authReducer.js\n\nimport {\n\tSET_CURRENT_USER,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from '../actions/types';\nimport isEmpty from '../is-empty';\n\nconst initialState = {\n\tisAuthenticated: false,\n\tforgotPasswordEmailSent: false,\n\tresetPasswordComplete: false,\n\tuser: {}\n}\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: !isEmpty(action.payload),\n\t\t\t\tuser: action.payload\n\t\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tforgotPasswordEmailSent: false\n\t\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tforgotPasswordEmailSent: true\n\t\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE:\n\t\tconsole.log('RESET_PASSWORD_COMPLETE ', action.payload);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresetPasswordComplete: true\n\t\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer\n});","// types.js\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\n// Forgot password\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst inititalState = {};\n\nconst store = createStore(\n        rootReducer, \n        inititalState, \n        compose(applyMiddleware(thunk), \n                window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","export var authToken;\n\nconst setAuthToken = token => {\n\tif(token) {\n\t\tauthToken = token;\n\t} else {\n\t\tauthToken = 'undefined';\n\t}\n\n\treturn authToken;\n}\n\nexport default setAuthToken;\n","// authentication.js\nimport setAuthToken from '../setAuthToken';\n// import jwt_decode from 'jwt-decode';\nimport {\n\tGET_ERRORS,\n\tSET_CURRENT_USER,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from './types';\nimport $ from 'jquery'; \n\nexport const registerUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n  // Push our data into our FormData object\n  for(var name in user) {\n\t\tformData.append(name, user[name]);\n  }\n  /*\n  for (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\tfetch('/api/v1/rest-auth/registration/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => history.push('/registration'))\n\t\t.catch(err => {\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t});\n\t\t});\n}\n\nexport const loginUser = (user) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n  for(var name in user) {\n\t\tformData.append(name, user[name]);\n  }\n\n\treturn fetch('/api/v1/rest-auth/login/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(token => {\n\t\t\t// token is an object { key: value }\n\t\t\t// localStorage can only store a string so we'll use just the value everywhere for consistency\n\t\t\tlocalStorage.setItem('jwtToken', token.key);\n      setAuthToken(token.key);\n      //const decoded = jwt_decode(token);\n      return dispatch(setCurrentUser(token.key));\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t});\n\t\t});\n}\n\nexport const setCurrentUser = token => {\n  return {\n      type: SET_CURRENT_USER,\n      payload: token\n  }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n  return {\n      type: FORGOT_PASSWORD_EMAIL_NOT_SENT\n  }\n}\n\nexport const forgotPasswordEmailSent = () => {\n  return {\n      type: FORGOT_PASSWORD_EMAIL_SENT\n  }\n}\n\nexport const forgotPassword = (email) => dispatch => {\n\tconsole.log('forgotPassword action creator. Email ', email);\n\n\tvar formData  = new FormData();\n\n  for(var name in email) {\n\t\tformData.append(name, email[name]);\n  }\n\n\treturn fetch('/api/v1/rest-auth/password/reset/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(() => {\n      return dispatch(forgotPasswordEmailSent());\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t});\n\t\t});\n}\n\nexport const resetPasswordComplete = (token) => {\n  return {\n      type: RESET_PASSWORD_COMPLETE,\n      token: token,\n  }\n}\n\n// https://www.techiediaries.com/django-react-forms-csrf-axios/\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = $.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport const resetPassword = (data) => dispatch => {\n\tconsole.log('resetPassword action creator. data ', data);\n// why is there an error if I rename 'email' to 'data'?\n\t//var formData  = new FormData();\n\n\tvar body = '';\n\tvar csrftoken = getCookie('csrftoken');\n\n  //for(var name in data) {\n\t\t//formData.append(name, email[name]);\n\t\tbody += `csrfmiddlewaretoken=${csrftoken}&`;\n\t\tbody += `new_password1=${data.password}&`;\n\t\tbody += `new_password2=${data.password_confirm}`;\n  //}\n\n  console.log('token ', data.csrfmiddlewaretoken);\n  console.log('body ', body);\n  console.log('data.uid ', data.uid);\n\n  // const body = `csrfmiddlewaretoken=${csrftoken}&new_password1=${email.password}&new_password2=${email.password_confirm}`;\n\n  return fetch(`/api/v1/reset1/${data.uid}/set-password/`,\n  \t{ credentials: 'include', 'method': 'POST', mode: 'same-origin',\n    headers: {\n    \t'Accept': 'text/html,application/xhtml+xml,application/xml',\n    \t'Content-Type': 'application/x-www-form-urlencoded',\n      'X-CSRFToken': csrftoken\n    }, 'body': body })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(token => {\n      return dispatch(resetPasswordComplete(token));\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error ', err.message);\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t});\n\t\t});\n}\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n      'showDropdown': false,\n    };\n  }\n  showDropdown(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      'showDropdown': !prevState.showDropdown,\n    }));\n  }\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst {isAuthenticated, user} = this.props.auth;\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<a href=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\n\t\t\t\t\t<img src={user.avatar} alt={user.name} title={user.name}\n\t\t\t\t\t\tclassName=\"rounded-circle\"\n\t\t\t\t\t\tstyle={{ width: '25px', marginRight: '5px'}} />\n\t\t\t\t\t\t\tLogout\n\t\t\t\t</a>\n\t\t\t</ul>\n\t\t)\n\t  const guestLinks = (\n\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n\t\t\t</li>\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Sign In</Link>\n\t\t\t</li>\n\t\t</ul>\n\t  )\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">Redux Node Auth</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e)}} >\n\t\t  \t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t  </form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t)\n\t}\n}\nNavbar.propTypes = {\n\tlogoutUser: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpassword_confirm: '',\n\t\t\terrors: {}\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\tname: this.state.name,\n\t\t\temail: this.state.email,\n\t\t\tpassword: this.state.password,\n\t\t\tpassword_confirm: this.state.password_confirm\n\t\t}\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn(\n\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n\t\t\t<h2 style={{marginBottom: '40px'}}>Registration</h2>\n\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t'is-invalid': errors.name\n\t\t\t\t\t})}\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t})}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t'is-invalid': errors.password\n\t\t\t\t\t})}\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t'is-invalid': errors.password_confirm\n\t\t\t\t\t})}\n\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\tRegister User\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t\t)\n\t}\n}\n\nRegister.propTypes = {\n\tregisterUser: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\terrors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            username: this.state.username,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    render() {\n        const {errors} = this.state;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Login</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"username\"\n                    placeholder=\"Username\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.username\n                    })}\n                    name=\"username\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.username }\n                    />\n                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })} \n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Login User\n                    </button>\n                </div>\n            </form>\n            <Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n        </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)\n","// Home.js\n\nimport React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home Component\n            </div>\n        );\n    }\n}","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forgotPassword, forgotPasswordEmailNotSent } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\temail: '',\n\t\t\t\terrors: {}\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\terrors: nextProps.errors\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.forgotPasswordEmailNotSent();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t\temail: this.state.email,\n\t\t}\n\t\tthis.props.forgotPassword(user);\n\t}\n\n\trender() {\n\t\tconst {errors} = this.state;\n\t\treturn(\n\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n\t\t\t<h2 style={{marginBottom: '40px'}}>Forgot password?</h2>\n\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t</div>\n\t\t)\n\t}\n}\n\nForgotPassword.propTypes = {\n\tforgotPassword: PropTypes.func.isRequired,\n\tforgotPasswordEmailNotSent: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors\n})\n\nexport  default connect(mapStateToProps, { forgotPassword, forgotPasswordEmailNotSent })(ForgotPassword)\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../actions/authentication';\nimport classnames from 'classnames';\nimport $ from 'jquery'; \n\nclass ResetPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\tpassword: '',\n        password_confirm: '',\n\t\t\t\terrors: {}\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/')\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\terrors: nextProps.errors\n\t\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// http://localhost:8000/api/v1/reset/Mw/52k-907cfda87df2f1f3b009/\n\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tconsole.log('url params ', this.props.match.params)\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\tuid: this.props.match.params.uid,\n\t\t\tcsrfmiddlewaretoken: this.props.match.params.token,\n\t\t\tpassword: this.state.password,\n      password_confirm: this.state.password_confirm\n\t\t}\n\t\tthis.props.resetPassword(user);\n\t}\n\n\t// https://www.techiediaries.com/django-react-forms-csrf-axios/\n\tgetCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = $.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\trender() {\n\t\tconst {errors} = this.state;\n\t\tvar csrftoken = this.getCookie('csrftoken');\n\t\treturn(\n\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n\t\t\t<h2 style={{marginBottom: '40px'}}>Enter a new password</h2>\n\t\t\t<form onSubmit={ this.handleSubmit }>\n \t\t\t\t<div className=\"form-group\">\n          <input\n          type=\"password\"\n          placeholder=\"Password\"\n          className={classnames('form-control form-control-lg', {\n              'is-invalid': errors.password\n          })}\n          name=\"password\"\n          onChange={ this.handleInputChange }\n          value={ this.state.password }\n          />\n          {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n\t      </div>\n\t      <div className=\"form-group\">\n          <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className={classnames('form-control form-control-lg', {\n              'is-invalid': errors.password_confirm\n          })}\n          name=\"password_confirm\"\n          onChange={ this.handleInputChange }\n          value={ this.state.password_confirm }\n          />\n          {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n\t      </div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\tSet new password\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t</div>\n\t\t)\n\t}\n}\n\nResetPassword.propTypes = {\n\tresetPassword: PropTypes.func.isRequired,\n//\tforgotPasswordEmailNotSent: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n\terrors: state.errors\n})\n\nexport  default connect(mapStateToProps, { resetPassword })(ResetPassword)\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport ForgotPassword from './components/ForgotPassword';\nimport ResetPassword from './components/ResetPassword';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  //const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(localStorage.jwtToken));\n\n  const currentTime = Date.now() / 1000;\n  if(localStorage.jwtToken.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = { store }>\n        <Router>\n            <div>\n              <Navbar />\n                <Route exact path=\"/\" component={ Home } />\n                <div className=\"container\">\n                  <Route exact path=\"/register\" component={ Register } />\n                  <Route exact path=\"/login\" component={ Login } />\n                  <Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n                  <Route path=\"/reset/:uid?/:token?\" component={ ResetPassword } />\n                </div>\n            </div>\n          </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["reducers/errorReducer.js","is-empty.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","actions/authentication.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Login.js","components/Home.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","modules/fetchAPI.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isEmpty","value","undefined","Object","keys","length","trim","updeep","require","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","user","combineReducers","errors","state","arguments","action","type","console","log","payload","auth","token","constant","username","email","slug","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","getAuthToken","localStorage","getItem","setCurrentUser","dispatch","setItem","setAuthToken","logoutUser","history","fetch","method","then","res","ok","removeItem","json","push","logout user","getUserInfo","getState","headers","Authorization","concat","Accept","Content-Type","get user info","setUserInfo","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","message","submitHandler","event","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","toConsumableArray","assign","noValidate","children","Register","password","password_confirm","handleInputChange","handleSubmit","defineProperty","target","name","password1","password2","registerUser","nextProps","errorTexts","registration","map","data","index","key","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","style","display","formData","FormData","append","body","response","forEach","error","text","Login","loginUser","authentication","Home","Account","ForgotPassword","forgotPasswordEmailNotSent","forgotPassword","marginTop","width","marginBottom","classnames","is-invalid","catch","err","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","_ref","url","_ref$method","_ref$useAuth","useAuth","contentType","get","includes","Promise","reject","Error","html","page_type","status","statusText","fetchAPI","JSON","stringify","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","location","hostname","match","navigator","serviceWorker","ready","unregister","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.91b2833a.chunk.js","sourcesContent":["// errorReducer.js\n\nimport { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\tconsole.log('error reducer ', action.payload);\n\t\t\treturn action.payload;\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// is-empty.js\n\nconst isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","// authReducer.js\n\nimport {\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from '../actions/types';\nimport isEmpty from '../is-empty';\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'user': {}\n};\n\n// TODO use updeep\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user profile\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user profile\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n\t'errors': errorReducer,\n\t'auth': authReducer,\n});\n","// types.js\n\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\n\n\n// Forgot password\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst inititalState = {};\n\nconst store = createStore(\n\trootReducer, \n\tinititalState, \n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// authentication.js\n// import setAuthToken from '../setAuthToken';\n// import jwt_decode from 'jwt-decode';\nimport {\n\tGET_ERRORS,\n\tSET_CURRENT_USER,\n\tSET_USER_INFO,\n\tLOGOUT_USER_COMPLETE,\n\tFORGOT_PASSWORD_EMAIL_NOT_SENT,\n\tFORGOT_PASSWORD_EMAIL_SENT,\n\tRESET_PASSWORD_COMPLETE\n} from './types';\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n}\n\n\nexport const registerUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\tconsole.log('register formData ', formData);\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\tfetch('/api/v1/rest-auth/registration/', { 'method': 'POST', 'body': formData })\n\t\t// this nested set of callbacks allows errors to be found and the server error message to be reported\n\t\t.then(response => \n\t\t\tresponse.json().then(data => ({\n\t\t\t\t'data': data,\n\t\t\t\t'ok': response.ok\n\t\t\t})\n\t\t\t).then(res => {\n\t\t\t\tif(res.ok) {\n\t\t\t\t\thistory.push('/');\n\t\t\t\t} else {\n\t\t\t\t\t// errors are returned as an object with a key per possible error, e.g. username, email\n\t\t\t\t\t// each error then is an array of texts\n\t\t\t\t\t// informative but overcomplicated!\n\t\t\t\t\t// user just wants to see a list of error texts explaining why registration failed\n\t\t\t\t\tlet errorTexts = [];\n\n\t\t\t\t\tObject.keys(res.data).forEach(function (error) {\n\t\t\t\t\t\tres.data[error].map((text) => { // eslint-disable-line array-callback-return\n\t\t\t\t\t\t\terrorTexts.push(text);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t\t'payload': { 'registration': errorTexts },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n};\n\n// TODO rework auth as a saga with token refresh\n// https://github.com/redux-saga/redux-saga/issues/14\nexport const loginUser = (user, history) => dispatch => {\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/login/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\thistory.push('/');\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'authentication': 'Unable to log in with the provided credentials, please try again.' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(data => {\n\t\t\tif(!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// data is an object { key: token }\n\t\t\t// we want the token string\n\t\t\treturn dispatch(setCurrentUser(data.key));\n\t\t}).then(() => {\n\t\t\t// after store has been updated with token, we can query the server for current user info\n\t\t\tstore.dispatch(getUserInfo());\n\t\t});\n};\n\n// we pass the token in because writing it to the store is asynchronous\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\treturn fetch('/api/v1/rest-auth/logout/', {\n\t\t'method': 'POST',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\tremoveAuthToken();\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\thistory.push('/');\n\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'logout user': 'Unable to logout' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(logoutUserComplete());\n\t\t});\n};\n// TODO parameterise api path\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\tconst token = store.getState().auth.user.token;\n\n\tif (!token) {\n\t\treturn;\n\t}\n\n\tconst headers = {\n\t\t'Authorization': `Token ${token}`,\n\t\t'Accept': 'application/json',\n\t\t'Content-Type': 'application/json',\n\t};\n\n\treturn fetch('/api/v1/rest-auth/user/', {\n\t\theaders,\n\t\t'method': 'GET',\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t\t'payload': { 'get user info': 'Unable to get user info' }\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.then(user => {\n\t\t\tif(!user) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn dispatch(setUserInfo({\n\t\t\t\t'username': user.username,\n\t\t\t\t'email': user.email,\n\t\t\t\t'slug': user.slug,\n\t\t\t}));\n\t\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetch('/api/v1/rest-auth/password/reset/', { 'method': 'POST', 'body': formData })\n\t\t.then(res => {\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(() => {\n\t\t\treturn dispatch(forgotPasswordEmailSent());\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch({\n\t\t\t\t'type': GET_ERRORS,\n\t\t\t\t'payload': err.response.data\n\t\t\t});\n\t\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////\nexport const changePassword = (data) => (dispatch) => {\n\tconst token = getAuthToken();\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\tfetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tconsole.log('response ', response);\n\t  if (response.ok) {\n\t    return response;\n\t  }\n\t}).catch(error => {\n\t\tconsole.log('error ', JSON.stringify(error.message));\n\t});\n\n\treturn;\n\n\tconst headers = {\n\t\t'Authorization': `Token ${token}`,\n\t};\n\n\treturn fetch('/api/v1/rest-auth/password/change/', {\n\t\theaders,\n\t\t'method': 'POST',\n\t\t'body': formData,\n\t})\n\t\t.then(res => {\n\t\t\tif(res.ok) {\n\t\t\t\tconsole.log('successfully changed password');\n\t\t\t\treturn res.json();\n\t\t\t} else {\n\t\t\t\tconsole.log('Change password res 1 ', res);\n\t\t\t\tconsole.log('error changing password');\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tconsole.log('Change password res 2 ', res);\n\t\t});\n};\n\n\n\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\t\t// console.log('navbar. state ', this.props.auth);\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tsubmitHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(event);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's submitHandler\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.submitHandler}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t// there may be more than one error, e.g. username and email already in use\n\t\tconst { errors } = this.props;\n\t\tlet errorTexts = [];\n\n\t\tif (errors.registration) {\n\t\t\terrorTexts = errors.registration.map((data, index) => {\n\t\t\t  return (\n\t\t\t    <li key={index}>{data}</li>\n\t\t\t  );\n\t\t\t});\n\t\t}\n\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email addres to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{errors.registration && <div className=\"form-feedback \" style={{ 'display': 'block' }}><ul>{errorTexts}</ul></div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\tconst { errors } = this.props;\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{errors.authentication && <div className=\"form-feedback \" style={{ 'display': 'block' }}><ul>{errors.authentication}</ul></div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// Home.js\n\nimport React, { Component } from 'react';\n\nexport default class Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tHome Component\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconsole.log('account 1 ', nextProps.auth.isAuthenticated);\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('account 2 ', this.props.auth.isAuthenticated);\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\treturn(\n\t\t\t<Link to=\"/changepassword\" className=\"nav-link\">Change password</Link>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps,)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { forgotPassword, forgotPasswordEmailNotSent } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.forgotPasswordEmailNotSent();\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.forgotPassword(user);\n\t}\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn(\n\t\t\t<div className=\"container\" style={ { 'marginTop': '50px', 'width': '700px' } }>\n\t\t\t\t<h2 style={ { 'marginBottom': '40px' } }>Forgot password?</h2>\n\t\t\t\t<form onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"feedback\">An email has been sent to {this.state.email}</div>)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { forgotPassword, forgotPasswordEmailNotSent })(ForgotPassword);\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword } from '../actions/authentication';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\tif(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t// there may be more than one error, e.g. username and email already in use\n\t\tconst { errors } = this.props;\n\t\tlet errorTexts = [];\n\n\t\tif (errors.changePassword) {\n\t\t\terrorTexts = errors.changePassword.map((data, index) => {\n\t\t\t  return (\n\t\t\t    <li key={index}>{data}</li>\n\t\t\t  );\n\t\t\t});\n\t\t}\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{errors.changePassword && <div className=\"form-feedback \" style={{ 'display': 'block' }}><ul>{errorTexts}</ul></div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword })(withRouter(ChangePassword));\n","// use fetch to get or post data.\n// pass up useful errors to the calling function.\nimport store from '../store';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false }) {\n\tlet headers = {};\n\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\tconsole.log('response ', response);\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(new Error('Invalid content type: ' + contentType));\n\t\t\t}\n\n\t\t\tif (response.status === 404) {\n\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t}\n\n\t\t\tif (response.status === 500) {\n\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t}\n\n\t\t\treturn response.json().then(res => {\n\t\t\t\t// if the response is ok but the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t// the information is contained in the json()\n\t\t\t\t// there may be more than one error\n\t\t\t\tlet errors = [];\n\t\t\t\tObject.keys(res).forEach((key) => {\n\t\t\t\t\terrors.push(`${key}: ${res[key]}`);\n\t\t\t\t});\n\t\t\t\treturn Promise.reject(new Error(errors)\n\t\t\t\t);\n\t\t\t});\n\t\t}).catch(error => {\n\t\t\tconsole.log('not OK ', error);\n\t\t\tconsole.log('status ', error.status);\n\t\t\tconsole.log('statusText ', error.statusText);\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { setCurrentUser, logoutUser, getAuthToken } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Account from './components/Account';\nimport ForgotPassword from './components/ForgotPassword';\nimport ChangePassword from './components/ChangePassword';\n\n// import ResetPassword from './components/ResetPassword';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password load the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}